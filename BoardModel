package introduction;

public class BoardModel {
    private int[][] board;
    private static final int EMPTY = -1;
    private static final int PLAYER_X = 1;
    private static final int PLAYER_O = 0;

    public BoardModel() {
        board = new int[3][3];
        initializeBoard();
    }

    private void initializeBoard() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                board[i][j] = EMPTY;
            }
        }
    }

    public boolean makeMove(int player, int row, int col) {
        if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] != EMPTY) {
            return false;
        }
        board[row][col] = player;
        return true;
    }

    public boolean checkWin(int player) {
        for (int i = 0; i < 3; i++)
        {
            if (board[i][0] == player && board[i][1] == player && board[i][2] == player)
            {
            	//here winning the rows
                return true;
            }
            if (board[0][i] == player && board[1][i] == player && board[2][i] == player)
            {
            	//here  winning the columns we getting winning Column win
            	return true; 
            }
        }
        if (board[0][0] == player && board[1][1] == player && board[2][2] == player)
        {
        	//here winning the right diagnol
            return true;
        }
        if (board[0][2] == player && board[1][1] == player && board[2][0] == player)
        {
        	//here winning the left diagonal
            return true;
        }
        return false;
        
    }

    public int[][] getBoard() {
        return board;
    }
}
